
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.border.Border;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
public class NewJFrame extends javax.swing.JFrame {

    int [][] values;
    private JLabel[][] jl=null;
    Random rd=null;
    int score_user;
    Color c0,c2,c4,c8,c16,c32,c64,c128,c256,c512,c1024,c2048;
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
       
        jl=new JLabel[4][4];
        values=new int[4][4];
        rd=new Random();
        score_user=0;
        this.setTitle("2048");
        this.assign_respective_labels();
        btnLeft.setFocusable(false);
        btnRight.setFocusable(false);
        btnUP.setFocusable(false);
        btnDown.setFocusable(false);
        c0=new Color(240, 240, 240);
        c2=new Color(240, 225, 235);
        c4=new Color(224, 217, 205);
        c8=new Color(173, 109, 77);
        c16=new Color(211,148,69);
        c32=new Color(142,70,90);
        c64=new Color(199,78,56);
        c128=new Color(79,153,234);
        c256=new Color(235,154,87);
        c512=new Color(247,197,43);
        c1024=new Color(247,157,43);
        c2048=new Color(239,183,101);
        score.requestFocus();
        
        for(int i=0;i<values.length;++i)
        {
            for(int j=0;j<values[i].length;++j)
            {
                //jl[i][j].setText("0");
                jl[i][j].setOpaque(true);
                values[i][j]=0;
            }
        }
        
       // this.store_values_from_label();
        this.generating_new_number();
        this.show_values_into_labels();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_21 = new javax.swing.JLabel();
        jLabel_01 = new javax.swing.JLabel();
        jLabel_31 = new javax.swing.JLabel();
        jLabel_11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel_20 = new javax.swing.JLabel();
        jLabel_00 = new javax.swing.JLabel();
        jLabel_30 = new javax.swing.JLabel();
        jLabel_10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel_22 = new javax.swing.JLabel();
        jLabel_02 = new javax.swing.JLabel();
        jLabel_32 = new javax.swing.JLabel();
        jLabel_12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel_23 = new javax.swing.JLabel();
        jLabel_03 = new javax.swing.JLabel();
        jLabel_33 = new javax.swing.JLabel();
        jLabel_13 = new javax.swing.JLabel();
        panel3 = new javax.swing.JPanel();
        btnUP = new javax.swing.JButton();
        btnLeft = new javax.swing.JButton();
        btnRight = new javax.swing.JButton();
        btnDown = new javax.swing.JButton();
        score_text_show = new javax.swing.JLabel();
        score = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel_21.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_21.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_21.setText("2048");
        jLabel_21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_01.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_01.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_01.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_01.setText("2048");
        jLabel_01.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_01.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_31.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_31.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_31.setText("2048");
        jLabel_31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_31.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_11.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_11.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_11.setText("2048");
        jLabel_11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_01, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_31, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel_01, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel_11, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_21, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_31, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel_20.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_20.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_20.setText("2048");
        jLabel_20.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_00.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_00.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_00.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_00.setText("2048");
        jLabel_00.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_00.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_30.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_30.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_30.setText("2048");
        jLabel_30.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_30.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_10.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_10.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_10.setText("2048");
        jLabel_10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_00, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_30, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel_00, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel_10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_20, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_30, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel_22.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_22.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_22.setText("2048");
        jLabel_22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_02.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_02.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_02.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_02.setText("2048");
        jLabel_02.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_02.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_32.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_32.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_32.setText("2048");
        jLabel_32.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_32.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_12.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_12.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_12.setText("2048");
        jLabel_12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_02, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_22, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_32, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel_02, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel_12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_22, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_32, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel_23.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_23.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_23.setText("2048");
        jLabel_23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_23.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_03.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_03.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_03.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_03.setText("2048");
        jLabel_03.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_03.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_33.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_33.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_33.setText("2048");
        jLabel_33.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_33.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_13.setBackground(new java.awt.Color(152, 80, 53));
        jLabel_13.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel_13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_13.setText("2048");
        jLabel_13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel_13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_03, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_23, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_33, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel_03, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel_13, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_23, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_33, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnUP.setText("Up");
        btnUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPActionPerformed(evt);
            }
        });

        btnLeft.setText("Left");
        btnLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftActionPerformed(evt);
            }
        });

        btnRight.setText("Right");
        btnRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightActionPerformed(evt);
            }
        });

        btnDown.setText("Down");
        btnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                        .addComponent(btnDown)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                        .addComponent(btnUP, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnLeft)
                .addGap(18, 18, 18)
                .addComponent(btnRight)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnUP, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLeft)
                    .addComponent(btnRight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDown)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        score_text_show.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        score_text_show.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        score_text_show.setText("SCORE");
        score_text_show.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                score_text_showKeyReleased(evt);
            }
        });

        score.setFont(new java.awt.Font("Lucida Console", 2, 16)); // NOI18N
        score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        score.setText("0000");
        score.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                scoreKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(score_text_show, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(499, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(score_text_show)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(score))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPActionPerformed
        // TODO add your handling code here:
        //this.check_for_2048();
        this.store_values_from_label();
        this.shift_up();

        for(int i=0;i<4;++i)
        {
            for(int j=0;j<3;++j)
            {
                if(values[j][i]==values[j+1][i])
                {
                    score_user+=values[j][i];
                    values[j][i]=2*values[j][i];
                    values[j+1][i]=0;
                }
            }
        }

        score.setText(score_user+"");
        this.check_for_2048();
        this.shift_up();
        this.show_values_into_labels();
        this.generating_new_number();
        score.requestFocus();
        //this.show_values_into_labels();
        

    }//GEN-LAST:event_btnUPActionPerformed

    private void btnLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftActionPerformed
        // TODO add your handling code here:
       // this.check_for_2048();
        this.store_values_from_label();// storing values from label to values[][]

        this.shift_left();// shifting the whole array (left)

        for(int i=0;i<4;++i)// comparing the values
        {
            for(int j=0;j<3;++j)
            {
                if(values[i][j]==values[i][j+1])
                {
                    score_user+=values[i][j];
                    values[i][j]=2*values[i][j];
                    values[i][j+1]=0;

                    //  score.setText(score_user+"");

                }
            }
        }
        score.setText(score_user+"");this.check_for_2048();
        this.shift_left();
        this.show_values_into_labels();// values[][] into labels
        this.generating_new_number();
        score.requestFocus();
        //this.show_values_into_labels();
       // this.check_for_2048();

    }//GEN-LAST:event_btnLeftActionPerformed

    private void btnRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightActionPerformed
        // TODO add your handling code here:
       // this.check_for_2048();
        this.store_values_from_label();
        this.shift_right();

        for(int i=0;i<4;++i)
        {
            for(int j=3;j>=1;--j)
            {
                if(values[i][j]==values[i][j-1])
                {
                    score_user+=values[i][j];
                    values[i][j]=2*values[i][j];
                    values[i][j-1]=0;
                }
            }
        }

        score.setText(score_user+"");this.check_for_2048();
        this.shift_right();
         this.show_values_into_labels();
        this.generating_new_number();
        score.requestFocus();
        //this.show_values_into_labels();
        //this.check_for_2048();

    }//GEN-LAST:event_btnRightActionPerformed

    private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
        // TODO add your handling code here:
        //this.check_for_2048();
        this.store_values_from_label();
        this.shift_down();

        for(int i=0;i<4;++i)
        {
            for(int j=3;j>=1;--j)
            {
                if(values[j][i]==values[j-1][i])
                {
                    score_user+=values[j][i];
                    values[j][i]=2*values[j][i];
                    values[j-1][i]=0;
                }
            }
        }

        score.setText(score_user+"");this.check_for_2048();
        this.shift_down();
        this.show_values_into_labels();
        this.generating_new_number();
        score.requestFocus();
       // this.show_values_into_labels();
       // this.check_for_2048();

    }//GEN-LAST:event_btnDownActionPerformed

    private void scoreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scoreKeyPressed

        // TODO add your handling code here:
        switch(evt.getKeyCode())
        {
            case KeyEvent.VK_W:
            case KeyEvent.VK_UP :this.btnUPActionPerformed(new java.awt.event.ActionEvent(btnUP, 0, null));
                                 break;
            case KeyEvent.VK_S:    
            case KeyEvent.VK_DOWN:this.btnDownActionPerformed(new java.awt.event.ActionEvent(btnDown,1,null));
                                  break;
            case KeyEvent.VK_A:    
            case KeyEvent.VK_LEFT :this.btnLeftActionPerformed(new java.awt.event.ActionEvent(btnLeft,2,null));
                                  break;
            case KeyEvent.VK_D:    
            case KeyEvent.VK_RIGHT: this.btnRightActionPerformed(new java.awt.event.ActionEvent(btnRight, 3, null));
                                    break;
        }
        score_text_show.requestFocus();
    }//GEN-LAST:event_scoreKeyPressed

    private void score_text_showKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_score_text_showKeyReleased
        // TODO add your handling code here:
        score.requestFocus();
    }//GEN-LAST:event_score_text_showKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    //*******************************************************************************
    
    private void store_values_from_label()
    {
        
        for(int i=0;i<4;++i)
        {
            for(int j=0;j<4;++j)
            {
                if(jl[i][j].getText().equals(""))
                {
                    values[i][j]=0;
                }
                else
                {
                    values[i][j]=Integer.parseInt(jl[i][j].getText());
                }
            }
        }
    
        
    }
    void assign_respective_labels()
    {
        jl[0][0]=jLabel_00;
        jl[0][1]=jLabel_01;
        jl[0][2]=jLabel_02;
        jl[0][3]=jLabel_03;
        
     //****************************************
        jl[1][0]=jLabel_10;
        jl[1][1]=jLabel_11;
        jl[1][2]=jLabel_12;
        jl[1][3]=jLabel_13;
        
     //****************************************   
        jl[2][0]=jLabel_20;
        jl[2][1]=jLabel_21;
        jl[2][2]=jLabel_22;
        jl[2][3]=jLabel_23;
        
     //****************************************   
        jl[3][0]=jLabel_30;
        jl[3][1]=jLabel_31;
        jl[3][2]=jLabel_32;
        jl[3][3]=jLabel_33;
      
     //****************************************   
        
        
    }
    void shift_left()
    {
        
        int [] a=new int[4]; int t=0;
        
        for(int i=0;i<4;++i)
        {
            for(int j=0;j<4;++j)
            {
                a[j]=values[i][j];
            }
            for(int k=0;k<4;++k)
            {
                if(a[k]!=0)
                {
                    values[i][t]=a[k];
                    ++t;
                }
                else
                {
                    
                }
            }
            while(t<=3)
            {
                values[i][t]=0;
                ++t;
            }
            t=0;
        }
        
    }
    void shift_right()
    {
        
        int [] a=new int[4]; 
        int t=3;
        for(int i=0;i<4;++i)
        {
            for(int j=0;j<4;++j)
            {
                a[j]=values[i][j];// storing the values
            }
            for(int k=3;k>=0;--k)// now performing the shift operation
            {
                if(a[k]!=0)
                {
                    values[i][t]=a[k];
                    --t;
                }
                else
                {
                    
                }
            }
            while(t>=0)
            {
                values[i][t]=0;
                --t;
            }
            t=3;
        }
        
    }
    void shift_up()
    {
       int []a=new int[4];
       int t=0;
       for(int i=0;i<4;++i)
       {
           for(int j=0;j<4;++j)
           {
               a[j]=values[j][i];
           }
           for(int k=0;k<4;++k)
           {
               if(a[k]!=0)
               {
                   values[t][i]=a[k];
                   ++t;
               }
           }
           while(t<=3)
           {
               values[t][i]=0;
               ++t;
           }
           t=0;
       }
       
    }
    void shift_down()
    {
        int []a=new int[4];
        int t=3;
        for(int i=0;i<4;++i)
        {
            for(int j=0;j<4;++j)
            {
                a[j]=values[j][i];
            }
            for(int k=3;k>=0;--k)
            {
                if(a[k]!=0)
                {
                    values[t][i]=a[k];
                    --t;
                }
            }
            while(t>=0)
            {
                values[t][i]=0;
                --t;
            }
            t=3;
        }
    }
    private void generating_new_number()
    {
        int [] b=new int[3];
        b[0]=4;b[1]=2;b[2]=4;
        boolean fl=false;
        boolean continue_to_generate=false;
        
        for(int i=0;i<4;++i)
        {
            for(int j=0;j<4;++j)
            {
                if(values[i][j]==0)
                {
                    continue_to_generate=true;
                    fl=true;
                    break;
                }
            }
            if(continue_to_generate)
            {
                break;
            }
        }
        while(fl)
        {
        int i=rd.nextInt(4);
        int j=rd.nextInt(4);
        if(values[i][j]==0)
        {
            try
            {
               Thread.sleep(10);
            }
            catch(InterruptedException e)
            {
                e.printStackTrace();
            }
            values[i][j]=b[rd.nextInt(2)];
            switch(values[i][j])
            {
                case 2:   jl[i][j].setText("2");
                          jl[i][j].setBackground(c2);
                          break;
                case 4:   jl[i][j].setText("4");
                          jl[i][j].setBackground(c4);
                          break;    
            }
            fl=false;
        }
        }
    }
    private void check_for_2048()
    {
        boolean game_reamaining=false;
       for(int i=0;i<4;++i)
       {
           for(int j=0;j<4;++j)
           {
               if(values[i][j]==0)
               {
                   game_reamaining=true;
                   
                   break;
               }
              
           }
           if(game_reamaining)
           {
               break;
           }
       }
       if(!game_reamaining)
       { boolean check_2048=false;
           for(int i=0;i<4;++i)
       {
           for(int j=0;j<4;++j)
           {
               if(values[i][j]==2048)
               {
                   check_2048=true;
                   break;
               }
              
           }
       }
           if(check_2048)
           {
           try {
               System.out.println("Yes you are the Intelligent");
               Thread.sleep(100);
               Game_completed g=new Game_completed(score_user);
               
               this.setVisible(false);
           } catch (InterruptedException ex) {
               Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
               
               
               
               
           }
           else
           {
               System.out.println("Sorry GAME OVER");
           try {
               Thread.sleep(100);
           } catch (InterruptedException ex) {
               Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
               Game_over c=new Game_over(score_user);
               this.setVisible(false);
               
           }
       }
    }
    private void show_values_into_labels()
    {
        for(int i=0;i<4;++i)
        {
            for(int j=0;j<4;++j)
            {
               try
               {
                /*if(values[i][j]==0)
                {
                    jl[i][j].setText("");
                    jl[i][j].setBackground(c0);
                   
                    //Thread.sleep(5);
                }*/
                   //else 
                //{    
                    jl[i][j].setText(values[i][j]+"");
                  
                    Thread.sleep(0);
                           switch(values[i][j])
                     {
                         case 0:jl[i][j].setText("");
                                jl[i][j].setBackground(c0);break;
                         case 2:jl[i][j].setBackground(c2);break;
                         case 4:jl[i][j].setBackground(c4);break;
                         case 8:jl[i][j].setBackground(c8);break;
                         case 16:jl[i][j].setBackground(c16);break;
                         case 32:jl[i][j].setBackground(c32);break;
                         case 64:jl[i][j].setBackground(c64);break;
                         case 128:jl[i][j].setBackground(c128);break;
                         case 256:jl[i][j].setBackground(c256);break;
                         case 512:jl[i][j].setBackground(c512);break;
                         case 1024:jl[i][j].setBackground(c1024);break;
                         case 2048:jl[i][j].setBackground(c2048);break;

                     
                      }
                      
               // }
               }
               catch(InterruptedException e)
               {
                   e.printStackTrace();
               }
               
                
            }
        }
    }

    
    
    
    
    
    
    
//**************************************************************************************
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnLeft;
    private javax.swing.JButton btnRight;
    private javax.swing.JButton btnUP;
    private javax.swing.JLabel jLabel_00;
    private javax.swing.JLabel jLabel_01;
    private javax.swing.JLabel jLabel_02;
    private javax.swing.JLabel jLabel_03;
    private javax.swing.JLabel jLabel_10;
    private javax.swing.JLabel jLabel_11;
    private javax.swing.JLabel jLabel_12;
    private javax.swing.JLabel jLabel_13;
    private javax.swing.JLabel jLabel_20;
    private javax.swing.JLabel jLabel_21;
    private javax.swing.JLabel jLabel_22;
    private javax.swing.JLabel jLabel_23;
    private javax.swing.JLabel jLabel_30;
    private javax.swing.JLabel jLabel_31;
    private javax.swing.JLabel jLabel_32;
    private javax.swing.JLabel jLabel_33;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel panel3;
    private javax.swing.JLabel score;
    private javax.swing.JLabel score_text_show;
    // End of variables declaration//GEN-END:variables
}
